@inject DeviceService DeviceService

@foreach (var device in Devices)
{
    <div class="device">
        <div class="name">
            <span class="caption">デバイス名</span>
            <span class="value">@device.Name</span>
        </div>
        <div class="mac-address">
            <span class="caption">MACアドレス</span>
            <span class="value">@device.MACAddress</span>
        </div>
    </div>
}

<div class="device">
    <EditForm Model="@NewDevice" OnValidSubmit="@OnOK">

        <DataAnnotationsValidator />

        <div class="name">
            <span class="caption">デバイス名</span>
            <span class="input-field">
                <InputText bind-value="@NewDevice.Name" />
            </span>
        </div>
        <div class="mac-address">
            <span class="caption">MACアドレス</span>
            <span class="input-field">
                <InputText bind-value="@NewDevice.MACAddress" />
            </span>
        </div>
        <div class="error-message">
            <ValidationSummary></ValidationSummary>
        </div>
        <div class="actions">
            <button class="button" type="submit">OK</button>
        </div>
    </EditForm>
</div>

@functions {
    IEnumerable<Device> Devices = new Device[0];

    Device NewDevice = new Device();

    protected override async Task OnInitAsync()
    {
        Devices = await DeviceService.GetDevicesAsync();
    }

    async Task OnOK()
    {
        // MACアドレスの正規化
        NewDevice.MACAddress = NewDevice.MACAddress.Replace("-", ":").ToUpper();

        await DeviceService.AddDeviceAsync(NewDevice);
        NewDevice = new Device();
    }
}
